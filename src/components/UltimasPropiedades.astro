---
/**
 * UltimasPropiedades.astro
 * Componente que muestra las propiedades m√°s recientes en la p√°gina principal
 * Incluye structured data para SEO y manejo de estados de error
 */

import TarjetaPropiedad from '@/components/Tarjetas/TarjetasPropiedades.jsx';
import BuscarButton from '@/components/BuscarButton.jsx';
import { Button } from '@heroui/react';
import { getCollection } from 'astro:content';
import { formatPrice } from '@/utils/index.js';

// ===== CONFIGURACI√ìN =====
const LATEST_PROPERTIES_COUNT = 4;
const LOCALE = 'es-AR';
const DEFAULT_CURRENCY = 'USD';

// ===== FUNCIONES UTILITARIAS =====

/**
 * Genera datos estructurados (Schema.org) para SEO
 * @param {Array} properties - Array de propiedades
 * @returns {Object} Objeto de structured data
 */
function generateStructuredData(properties) {
  return {
    "@context": "https://schema.org",
    "@type": "ItemList",
    "name": "√öltimas Propiedades",
    "description": "Propiedades inmobiliarias m√°s recientes disponibles",
    "numberOfItems": properties.length,
    "itemListElement": properties.map((property, index) => ({
      "@type": "ListItem",
      "position": index + 1,
      "item": {
        "@type": "RealEstateListing",
        "name": property.data?.title || 'Propiedad sin t√≠tulo',
        "description": property.data?.description || 'Sin descripci√≥n',
        "image": property.data?.image || '/images/placeholder-property.webp',
        "url": `${Astro.site || Astro.url.origin}/propiedades/detalles/${property.slug}`,
        "address": property.data?.ciudad ? {
          "@type": "PostalAddress",
          "addressLocality": property.data.ciudad
        } : undefined,
        "offers": property.data?.price ? {
          "@type": "Offer",
          "price": property.data.price,
          "priceCurrency": property.data?.currency || DEFAULT_CURRENCY,
          "availability": "https://schema.org/InStock"
        } : undefined
      }
    }))
  };
}

/**
 * Ordena propiedades por fecha (m√°s recientes primero)
 * @param {Array} properties - Array de propiedades
 * @returns {Array} Propiedades ordenadas
 */
function sortByDate(properties) {
  return properties.sort((a, b) => {
    const dateA = a.data?.date ? new Date(a.data.date) : new Date(0);
    const dateB = b.data?.date ? new Date(b.data.date) : new Date(0);
    return dateB - dateA; // M√°s reciente primero
  });
}

// ===== L√ìGICA PRINCIPAL =====
let properties = [];
let hasError = false;
let errorMessage = '';

try {
  const allProperties = await getCollection('propiedades');
  
  if (!allProperties || allProperties.length === 0) {
    console.warn('No properties found in collection');
    properties = [];
  } else {
    // Ordenar por fecha y tomar las m√°s recientes
    const sortedProperties = sortByDate([...allProperties]);
    properties = sortedProperties.slice(0, LATEST_PROPERTIES_COUNT);
    
   
  }
} catch (error) {
  console.error('‚ùå Error loading properties:', error);
  hasError = true;
  errorMessage = error.message || 'Error desconocido';
}

// Generar structured data solo si hay propiedades
const structuredData = properties.length > 0 ? generateStructuredData(properties) : null;

// ===== SEO Y METADATA =====
const sectionTitle = '√öltimas Propiedades';
const sectionDescription = 'Descubre nuestras propiedades m√°s recientes con las mejores ubicaciones y precios del mercado inmobiliario';
const sectionId = 'latest-properties';

// Iconos SVG como strings para usar en HeroUI Button
const RefreshIcon = '<svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" /></svg>';
const EmailIcon = '<svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" /></svg>';
---

<section 
  id={sectionId}
  class="py-16"
  aria-labelledby="latest-properties-heading"
>
  <div class="container mx-auto">
    <!-- Header Section -->
    <header class="text-center mb-12">
      <h2 
        id="latest-properties-heading"
        class="text-4xl font-bold text-gray-900 mb-4"
      >
        {sectionTitle}
      </h2>
      <p class="text-lg text-gray-600 max-w-2xl mx-auto">
        {sectionDescription}
      </p>
    </header>

    <!-- Content -->
    {!hasError && properties.length > 0 ? (
      <>
        <!-- Properties Grid -->
        <div 
          class="properties-grid"
          role="list"
          aria-label="Lista de propiedades recientes"
        >
          {properties.map((property, index) => {
            // Validaci√≥n de slug
            if (!property?.slug) {
              console.warn(`‚ö†Ô∏è Property at index ${index} is missing slug`);
              return null;
            }

            // Las primeras 2 propiedades se cargan con prioridad (above the fold)
            const isAboveFold = index < 2;
            
            return (
              <div key={property.slug} className="property-card-wrapper">
                <TarjetaPropiedad 
                  client:idle
                  image={property.data?.image || '/images/placeholder-property.webp'} 
                  title={property.data?.title || 'T√≠tulo no disponible'} 
                  description={property.data?.description || 'Descripci√≥n no disponible'} 
                  price={formatPrice(property.data?.price, property.data?.currency)}
                  slug={property.slug}
                  imageAlt={`Imagen de ${property.data?.title || 'propiedad'}`}
                  priority={isAboveFold}
                />
              </div>
            );
          })}
        </div>

        <!-- Call to Action -->
        <footer class="text-center mt-12">
          <BuscarButton 
            variant="header" 
            client:idle
           
          >
            Ver todas las propiedades
          </BuscarButton>
          
          <!-- Informaci√≥n adicional -->
          <p class="text-sm text-gray-500 mt-4">
            Mostrando {properties.length} de las propiedades m√°s recientes
          </p>
        </footer>
      </>
    ) : (
      <!-- Estados de Error y Vac√≠o -->
      <div class="min-h-[400px] flex items-center justify-center">
        {hasError ? (
          <!-- Error State -->
          <div class="text-center py-12" role="alert" aria-live="assertive">
            <div class="max-w-md mx-auto">
              <!-- Icono de error -->
              <div class="mx-auto w-16 h-16 mb-6 text-red-400">
                <svg fill="none" viewBox="0 0 24 24" stroke="currentColor" class="w-full h-full">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.98-.833-2.75 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z" />
                </svg>
              </div>
              
              <h3 class="text-xl font-semibold text-gray-900 mb-2">
                Error al cargar propiedades
              </h3>
              
              <p class="text-gray-600 mb-6">
                Hubo un problema t√©cnico al cargar las propiedades. Por favor, intenta recargar la p√°gina.
              </p>
              
              {import.meta.env.DEV && (
                <details class="text-left text-xs text-gray-500 mb-4 p-3 bg-gray-50 rounded">
                  <summary class="cursor-pointer font-medium">Detalles del error (solo en desarrollo)</summary>
                  <pre class="mt-2 whitespace-pre-wrap">{errorMessage}</pre>
                </details>
              )}
              
              <Button 
                client:visible
                color="danger"
                variant="solid"
                size="lg"
                onPress={() => window.location.reload()}
              >
                üîÑ Recargar p√°gina
              </Button>
            </div>
          </div>
        ) : (
          <!-- Empty State -->
          <div class="text-center py-12" role="status">
            <div class="max-w-md mx-auto">
              <!-- Icono de estado vac√≠o -->
              <div class="mx-auto w-20 h-20 mb-6 text-gray-300">
                <svg fill="none" viewBox="0 0 24 24" stroke="currentColor" class="w-full h-full">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4" />
                </svg>
              </div>
              
              <h3 class="text-xl font-semibold text-gray-900 mb-2">
                No hay propiedades disponibles
              </h3>
              
              <p class="text-gray-600 mb-6">
                Estamos trabajando para agregar nuevas propiedades pronto. Vuelve a visitarnos m√°s tarde.
              </p>
              
              <Button
                client:visible
                as="a"
                href="/contacto"
                color="primary"
                variant="bordered"
                size="lg"
              >
                ‚úâÔ∏è Cont√°ctanos para m√°s informaci√≥n
              </Button>
            </div>
          </div>
        )}
      </div>
    )}
  </div>

  <!-- Structured Data for SEO -->
  {structuredData && (
    <script type="application/ld+json" set:html={JSON.stringify(structuredData)} />
  )}
</section>

<style>
  /* Grid de propiedades responsive */
  .properties-grid {
    display: grid;
    gap: 2rem;
    width: 100%;
  }

  /* Mobile: 1 columna */
  @media (max-width: 767px) {
    .properties-grid {
      grid-template-columns: 1fr;
      gap: 1.5rem;
    }
  }

  /* Tablet: 2 columnas */
  @media (min-width: 768px) and (max-width: 1023px) {
    .properties-grid {
      grid-template-columns: repeat(2, 1fr);
      gap: 1.5rem;
    }
  }

  /* Desktop: 4 columnas */
  @media (min-width: 1024px) {
    .properties-grid {
      grid-template-columns: repeat(4, 1fr);
      gap: 2rem;
    }
  }

  /* CR√çTICO: Forzar que todos los hijos directos respeten la grid */
  .properties-grid > * {
    width: 100%;
    min-width: 0; /* Previene overflow */
    display: grid; /* Fuerza grid context */
    grid-template-rows: subgrid;
  }

  /* Asegurar que astro-island (wrapper de client components) no rompa el layout */
  .properties-grid > astro-island {
    display: contents; /* Hace que el wrapper sea transparente al layout */
  }

  /* Focus states */
  button:focus,
  a:focus {
    outline: 2px solid #3b82f6;
    outline-offset: 2px;
    border-radius: 0.5rem;
  }

  /* Smooth transitions */
  button,
  a {
    transition: all 0.2s ease-in-out;
  }
</style>