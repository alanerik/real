---
import { getCollection } from "astro:content";
import CardMain from "./Tarjetas/TarjetasPropiedades.jsx";
import { formatPrice } from "../utils/formatters.js";

const { propertyType, city, currentSlug } = Astro.props;

const allProperties = await getCollection("propiedades");

const similarProperties = allProperties.filter((prop) => {
  return (
    prop.data.propertyType === propertyType &&
    prop.data.city === city &&
    prop.slug !== currentSlug
  );
});
---

{
  similarProperties.length > 0 && (
    <section class="py-12 bg-gray-100 max-w-7xl mx-auto">
      <div class="container mx-auto px-4">
        <h2 class="text-3xl font-bold text-center mb-8">
          Propiedades Similares
        </h2>
        <div class="flex overflow-x-auto gap-8 snap-x snap-mandatory">
          {similarProperties.map((prop) => (
            <div class="snap-start flex-shrink-0 w-full md:w-1/2 lg:w-1/3">
              <CardMain
                client:load
                image={prop.data?.image || '/images/placeholder-property.webp'}
                title={prop.data?.title || 'Título no disponible'}
                description={prop.data?.description || 'Descripción no disponible'}
                price={formatPrice(prop.data?.price, prop.data?.currency)}
                slug={prop.slug}
                imageAlt={`Imagen de ${prop.data?.title || 'propiedad'}`}
              />
            </div>
          ))}
        </div>
      </div>
    </section>
  )
}
